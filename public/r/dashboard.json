{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dashboard",
  "type": "registry:block",
  "title": "Breitling Dashboard",
  "description": "A comprehensive admin dashboard for Breitling with analytics, orders, and product management",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "theme",
    "button",
    "card"
  ],
  "files": [
    {
      "path": "app/dashboard/page.tsx",
      "content": "import { DashboardHeader } from \"@/components/dashboard/header\"\nimport { DashboardSidebar } from \"@/components/dashboard/sidebar\"\nimport { WatchSalesChart } from \"@/components/dashboard/watch-sales-chart\"\nimport { RecentOrders } from \"@/components/dashboard/recent-orders\"\nimport { StatsCards } from \"@/components/dashboard/stats-cards\"\nimport { TopSellingWatches } from \"@/components/dashboard/top-selling-watches\"\n\nexport default function DashboardPage() {\n  return (\n    <div className=\"flex h-screen overflow-hidden bg-gray-50\">\n      <DashboardSidebar />\n      <div className=\"flex-1 overflow-y-auto\">\n        <DashboardHeader />\n        <main className=\"p-6\">\n          <h1 className=\"text-2xl font-bold mb-6\">Dashboard</h1>\n          <StatsCards />\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-6\">\n            <div className=\"md:col-span-2 bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n              <h2 className=\"text-lg font-semibold mb-4\">Watch Sales Overview</h2>\n              <WatchSalesChart />\n            </div>\n            <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n              <h2 className=\"text-lg font-semibold mb-4\">Top Selling Watches</h2>\n              <TopSellingWatches />\n            </div>\n          </div>\n          <div className=\"mt-6 bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n            <h2 className=\"text-lg font-semibold mb-4\">Recent Orders</h2>\n            <RecentOrders />\n          </div>\n        </main>\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx"
    },
    {
      "path": "components/dashboard/header.tsx",
      "content": "import { Bell, Search, User } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\n\nexport function DashboardHeader() {\n  return (\n    <header className=\"bg-white border-b border-gray-200 h-16 flex items-center justify-between px-6\">\n      <div className=\"relative w-64\">\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#FFCC33] focus:border-transparent\"\n        />\n      </div>\n      <div className=\"flex items-center space-x-4\">\n        <Button variant=\"ghost\" size=\"icon\" className=\"relative\">\n          <Bell className=\"h-5 w-5\" />\n          <span className=\"absolute top-0 right-0 h-2 w-2 rounded-full bg-red-500\"></span>\n        </Button>\n        <div className=\"h-8 w-8 rounded-full bg-[#072C54] flex items-center justify-center text-white\">\n          <User className=\"h-4 w-4\" />\n        </div>\n      </div>\n    </header>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/dashboard/sidebar.tsx",
      "content": "import Link from \"next/link\"\nimport { Home, ShoppingBag, Users, Watch, Briefcase, Settings, LogOut } from \"lucide-react\"\n\nexport function DashboardSidebar() {\n  return (\n    <div className=\"w-64 bg-[#072C54] text-white h-full flex flex-col\">\n      <div className=\"p-4 border-b border-white/10 flex items-center justify-center\">\n        <h1 className=\"text-2xl font-bold\">BREITLING</h1>\n      </div>\n      <nav className=\"flex-1 overflow-y-auto py-4 px-3\">\n        <ul className=\"space-y-1\">\n          <li>\n            <Link href=\"/dashboard\" className=\"flex items-center p-3 text-white rounded-lg hover:bg-white/10\">\n              <Home className=\"w-5 h-5 mr-3\" />\n              Dashboard\n            </Link>\n          </li>\n          <li>\n            <Link href=\"/dashboard/products\" className=\"flex items-center p-3 text-white rounded-lg hover:bg-white/10\">\n              <Watch className=\"w-5 h-5 mr-3\" />\n              Products\n            </Link>\n          </li>\n          <li>\n            <Link href=\"/dashboard/orders\" className=\"flex items-center p-3 text-white rounded-lg hover:bg-white/10\">\n              <ShoppingBag className=\"w-5 h-5 mr-3\" />\n              Orders\n            </Link>\n          </li>\n          <li>\n            <Link href=\"/dashboard/customers\" className=\"flex items-center p-3 text-white rounded-lg hover:bg-white/10\">\n              <Users className=\"w-5 h-5 mr-3\" />\n              Customers\n            </Link>\n          </li>\n          <li>\n            <Link href=\"/dashboard/boutiques\" className=\"flex items-center p-3 text-white rounded-lg hover:bg-white/10\">\n              <Briefcase className=\"w-5 h-5 mr-3\" />\n              Boutiques\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"p-4 border-t border-white/10\">\n        <ul className=\"space-y-1\">\n          <li>\n            <Link href=\"/dashboard/settings\" className=\"flex items-center p-3 text-white rounded-lg hover:bg-white/10\">\n              <Settings className=\"w-5 h-5 mr-3\" />\n              Settings\n            </Link>\n          </li>\n          <li>\n            <button className=\"w-full flex items-center p-3 text-white rounded-lg hover:bg-white/10\">\n              <LogOut className=\"w-5 h-5 mr-3\" />\n              Logout\n            </button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/dashboard/stats-cards.tsx",
      "content": "import { ArrowUp, ArrowDown, ShoppingBag, User, DollarSign, Watch } from \"lucide-react\"\n\nexport function StatsCards() {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n      <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <p className=\"text-sm text-gray-500 mb-1\">Total Sales</p>\n            <h3 className=\"text-2xl font-bold\">$582,800</h3>\n            <div className=\"flex items-center mt-2\">\n              <span className=\"text-green-500 flex items-center text-sm\">\n                <ArrowUp className=\"h-3 w-3 mr-1\" /> 12.5%\n              </span>\n              <span className=\"text-xs text-gray-500 ml-2\">from last month</span>\n            </div>\n          </div>\n          <div className=\"bg-blue-100 p-3 rounded-full\">\n            <DollarSign className=\"h-5 w-5 text-blue-600\" />\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <p className=\"text-sm text-gray-500 mb-1\">Total Orders</p>\n            <h3 className=\"text-2xl font-bold\">1,342</h3>\n            <div className=\"flex items-center mt-2\">\n              <span className=\"text-green-500 flex items-center text-sm\">\n                <ArrowUp className=\"h-3 w-3 mr-1\" /> 8.2%\n              </span>\n              <span className=\"text-xs text-gray-500 ml-2\">from last month</span>\n            </div>\n          </div>\n          <div className=\"bg-amber-100 p-3 rounded-full\">\n            <ShoppingBag className=\"h-5 w-5 text-amber-600\" />\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <p className=\"text-sm text-gray-500 mb-1\">Watches Sold</p>\n            <h3 className=\"text-2xl font-bold\">967</h3>\n            <div className=\"flex items-center mt-2\">\n              <span className=\"text-red-500 flex items-center text-sm\">\n                <ArrowDown className=\"h-3 w-3 mr-1\" /> 3.1%\n              </span>\n              <span className=\"text-xs text-gray-500 ml-2\">from last month</span>\n            </div>\n          </div>\n          <div className=\"bg-purple-100 p-3 rounded-full\">\n            <Watch className=\"h-5 w-5 text-purple-600\" />\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <p className=\"text-sm text-gray-500 mb-1\">New Customers</p>\n            <h3 className=\"text-2xl font-bold\">385</h3>\n            <div className=\"flex items-center mt-2\">\n              <span className=\"text-green-500 flex items-center text-sm\">\n                <ArrowUp className=\"h-3 w-3 mr-1\" /> 18.7%\n              </span>\n              <span className=\"text-xs text-gray-500 ml-2\">from last month</span>\n            </div>\n          </div>\n          <div className=\"bg-green-100 p-3 rounded-full\">\n            <User className=\"h-5 w-5 text-green-600\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/dashboard/watch-sales-chart.tsx",
      "content": "\"use client\"\n\nimport { useEffect, useRef } from 'react'\n\nexport function WatchSalesChart() {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  \n  useEffect(() => {\n    // This is a placeholder for a chart library implementation\n    // In a real application, you would use a library like Chart.js, Recharts, etc.\n    if (canvasRef.current) {\n      const ctx = canvasRef.current.getContext('2d')\n      if (ctx) {\n        // Draw a simple line chart for demonstration purposes\n        const width = canvasRef.current.width\n        const height = canvasRef.current.height\n        const padding = 40\n        const dataPoints = [25, 40, 60, 45, 80, 65, 75, 95, 85, 70, 90, 100]\n        \n        // Clear canvas\n        ctx.clearRect(0, 0, width, height)\n        \n        // Draw axes\n        ctx.beginPath()\n        ctx.moveTo(padding, padding)\n        ctx.lineTo(padding, height - padding)\n        ctx.lineTo(width - padding, height - padding)\n        ctx.strokeStyle = '#ccc'\n        ctx.stroke()\n        \n        // Draw line chart\n        const step = (width - 2 * padding) / (dataPoints.length - 1)\n        const scale = (height - 2 * padding) / 100\n        \n        ctx.beginPath()\n        ctx.moveTo(padding, height - padding - dataPoints[0] * scale)\n        \n        for (let i = 1; i < dataPoints.length; i++) {\n          ctx.lineTo(padding + i * step, height - padding - dataPoints[i] * scale)\n        }\n        \n        ctx.strokeStyle = '#FFCC33'\n        ctx.lineWidth = 3\n        ctx.stroke()\n        \n        // Fill area under the line\n        ctx.lineTo(padding + (dataPoints.length - 1) * step, height - padding)\n        ctx.lineTo(padding, height - padding)\n        ctx.fillStyle = 'rgba(255, 204, 51, 0.1)'\n        ctx.fill()\n        \n        // Draw data points\n        for (let i = 0; i < dataPoints.length; i++) {\n          ctx.beginPath()\n          ctx.arc(padding + i * step, height - padding - dataPoints[i] * scale, 4, 0, 2 * Math.PI)\n          ctx.fillStyle = '#FFCC33'\n          ctx.fill()\n          ctx.strokeStyle = '#fff'\n          ctx.lineWidth = 2\n          ctx.stroke()\n        }\n        \n        // Draw month labels\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        ctx.fillStyle = '#666'\n        ctx.font = '12px Arial'\n        ctx.textAlign = 'center'\n        \n        for (let i = 0; i < months.length; i++) {\n          ctx.fillText(months[i], padding + i * step, height - padding + 20)\n        }\n      }\n    }\n  }, [])\n  \n  return (\n    <div className=\"w-full h-[300px] flex items-center justify-center\">\n      <canvas ref={canvasRef} width=\"800\" height=\"300\" className=\"w-full h-full\"></canvas>\n    </div>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/dashboard/top-selling-watches.tsx",
      "content": "import Image from \"next/image\"\n\ninterface TopWatch {\n  id: string\n  name: string\n  model: string\n  image: string\n  sales: number\n  price: string\n}\n\nexport function TopSellingWatches() {\n  const topWatches: TopWatch[] = [\n    {\n      id: \"navitimer-b01-46\",\n      name: \"Navitimer B01 Chronograph 46\",\n      model: \"AB0127\",\n      image: \"/images/watches/navitimer-b01-chronograph-46.png\",\n      sales: 182,\n      price: \"9,600\"\n    },\n    {\n      id: \"superocean-42\",\n      name: \"Superocean Automatic 42\",\n      model: \"A17375\",\n      image: \"/images/watches/superocean-automatic-42.png\",\n      sales: 156,\n      price: \"4,750\"\n    },\n    {\n      id: \"premier-b01-42\",\n      name: \"Premier B01 Chronograph 42\",\n      model: \"AB0118\",\n      image: \"/images/watches/premier-b01-chronograph-42.png\",\n      sales: 134,\n      price: \"8,300\"\n    },\n    {\n      id: \"chronomat-b01-42\",\n      name: \"Chronomat B01 42\",\n      model: \"AB0134\",\n      image: \"/images/watches/chronomat-b01-42.png\",\n      sales: 129,\n      price: \"8,100\"\n    }\n  ]\n\n  return (\n    <div className=\"space-y-4\">\n      {topWatches.map((watch) => (\n        <div key={watch.id} className=\"flex items-center p-2 hover:bg-gray-50 rounded-md\">\n          <div className=\"relative w-12 h-12 mr-3\">\n            <Image \n              src={watch.image || \"/placeholder.svg\"} \n              alt={watch.name} \n              fill \n              className=\"object-contain\" \n            />\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <p className=\"text-sm font-medium truncate\">{watch.name}</p>\n            <p className=\"text-xs text-gray-500\">{watch.model}</p>\n          </div>\n          <div className=\"text-right\">\n            <p className=\"text-sm font-bold\">{watch.sales} sold</p>\n            <p className=\"text-xs text-gray-500\">{watch.price} CHF</p>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/dashboard/recent-orders.tsx",
      "content": "import { Clock } from \"lucide-react\"\n\ninterface Order {\n  id: string\n  customer: string\n  date: string\n  amount: string\n  status: \"pending\" | \"processing\" | \"shipped\" | \"delivered\"\n  products: string[]\n}\n\nexport function RecentOrders() {\n  const orders: Order[] = [\n    {\n      id: \"ORD-7352\",\n      customer: \"John Davidson\",\n      date: \"June 15, 2023\",\n      amount: \"8,300\",\n      status: \"delivered\",\n      products: [\"Premier B01 Chronograph 42\"]\n    },\n    {\n      id: \"ORD-7351\",\n      customer: \"Sarah Miller\",\n      date: \"June 14, 2023\",\n      amount: \"4,750\",\n      status: \"shipped\",\n      products: [\"Superocean Automatic 42\"]\n    },\n    {\n      id: \"ORD-7350\",\n      customer: \"Robert Chen\",\n      date: \"June 14, 2023\",\n      amount: \"17,700\",\n      status: \"processing\",\n      products: [\"Navitimer B01 Chronograph 46\", \"Superocean Automatic 42\"]\n    },\n    {\n      id: \"ORD-7349\",\n      customer: \"Emma Thompson\",\n      date: \"June 13, 2023\",\n      amount: \"9,600\",\n      status: \"pending\",\n      products: [\"Navitimer B01 Chronograph 46\"]\n    },\n    {\n      id: \"ORD-7348\",\n      customer: \"Michael Patel\",\n      date: \"June 13, 2023\",\n      amount: \"8,100\",\n      status: \"processing\",\n      products: [\"Chronomat B01 42\"]\n    }\n  ]\n\n  const getStatusColor = (status: Order[\"status\"]) => {\n    switch (status) {\n      case \"delivered\":\n        return \"bg-green-100 text-green-800\"\n      case \"shipped\":\n        return \"bg-blue-100 text-blue-800\"\n      case \"processing\":\n        return \"bg-yellow-100 text-yellow-800\"\n      case \"pending\":\n        return \"bg-gray-100 text-gray-800\"\n      default:\n        return \"bg-gray-100 text-gray-800\"\n    }\n  }\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <table className=\"min-w-full divide-y divide-gray-200\">\n        <thead>\n          <tr>\n            <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Order ID</th>\n            <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\n            <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Products</th>\n            <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n            <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\n            <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n          </tr>\n        </thead>\n        <tbody className=\"bg-white divide-y divide-gray-200\">\n          {orders.map((order) => (\n            <tr key={order.id} className=\"hover:bg-gray-50\">\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{order.id}</td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{order.customer}</td>\n              <td className=\"px-6 py-4 text-sm text-gray-500\">\n                <div className=\"max-w-xs overflow-hidden\">\n                  {order.products.map((product, index) => (\n                    <span key={index} className=\"block truncate\">{product}</span>\n                  ))}\n                </div>\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                <div className=\"flex items-center\">\n                  <Clock className=\"h-4 w-4 mr-1 text-gray-400\" />\n                  {order.date}\n                </div>\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">{order.amount} CHF</td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">\n                <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(order.status)}`}>\n                  {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                </span>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/ui/button.tsx",
      "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}